pragma solidity 0.6.0;
import "../MagicNum.sol";

contract magicNumATK {
    MagicNum instance;
    address solverAddr;
    constructor(address _instance)public {
        instance = MagicNum(_instance);
    }
    function attack() public{
        bytes memory bytecode = hex"600a600c600039600a6000f3602a60005260206000f3";
        bytes32 salt = 0;
        address solver;

        assembly {
            solver := create2(0, add(bytecode, 0x20), mload(bytecode), salt)
        }
        solverAddr = solver;
        instance.setSolver(solver);
    }
    function getCodeSize() public view returns (uint256 x){
        address addr = solverAddr;
        assembly {
            x:= extcodesize(addr)
        }
    }
}